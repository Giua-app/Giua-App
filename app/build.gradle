/*
 * Giua App
 * Android app to view data from the giua@school workbook
 * Copyright (C) 2021 - 2021 Hiem, Franck1421 and contributors
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see https://www.gnu.org/licenses/.
 */


plugins {
    id 'com.android.application'
    id 'com.gladed.androidgitversion' version '0.4.14'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

androidGitVersion {
    baseCode 1
}

androidGitVersion {
    untrackedIsDirty = false
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    
    lintOptions { 
         abortOnError false 
     } 

    defaultConfig {
        applicationId "com.giua.app"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode androidGitVersion.code()
        versionName androidGitVersion.name()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
	signingConfigs {
        release {
            def tmpFilePath = System.getProperty("user.home") + "/work/_temp/keystore/"
            def allFilesFromDir = new File(tmpFilePath).listFiles()

            if (allFilesFromDir != null) {
                def keystoreFile = allFilesFromDir.first()
                keystoreFile.renameTo("keystore/giua-app.jks")
            }

            storeFile = file("keystore/giua-app.jks")
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
	    signingConfig signingConfigs.release
        }

        /*alpha {
            initWith debug
        }*/
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    //noinspection KtxExtensionAvailable
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    //noinspection KtxExtensionAvailable
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //--Memory leak lib
    //implementation 'com.squareup.leakcanary:leakcanary-android:2.7'  //DEBUG

    //--jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.14.3'

    //--Giua scraper
    implementation 'com.github.Giua-app:Giua-Webscraper:1.1.19-beta'
    //implementation fileTree(dir: 'libs', include: ['*.jar'])     //DEBUG

    //--Charts lib
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //--Error handler lib
    implementation 'cat.ereza:customactivityoncrash:2.3.0'

    //--About screen
    implementation 'com.github.daniel-stoneuk:material-about-library:3.1.2'

    //--Material drawer
    implementation 'com.mikepenz:materialdrawer:6.1.2'

    //--App Intro
    implementation 'com.github.AppIntro:AppIntro:6.1.0'

    //--Settings screen (https://developer.android.com/jetpack/androidx/releases/preference)
    //noinspection KtxExtensionAvailable
    implementation "androidx.preference:preference:1.1.1"

    //--Doki (display info from dontkillmyapp.com - https://github.com/DoubleDotLabs/doki)
    implementation('dev.doubledot.doki:library:c18efeb072@aar') {
        transitive = true
    }

    //--Android Iconics !!!NON AGGIORNARE!!!
    //noinspection GradleDependency
    implementation "com.mikepenz:iconics-core:3.2.5"
    implementation 'com.mikepenz:google-material-typeface:3.0.1.3.original@aar'
    //implementation 'com.mikepenz:fontawesome-typeface:5.3.1.1@aar'
    implementation 'com.mikepenz:community-material-typeface:3.5.95.1@aar'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

/*android.applicationVariants.all { variant ->
    versions.apply(variant)
}*/
