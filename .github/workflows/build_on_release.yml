# This is a basic workflow to help you get started with Actions

name: Assemble app on new release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #release:
    #types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
            TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
            mkdir "${TMP_KEYSTORE_FILE_PATH}"
            echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/giua-app.jks
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - uses: gradle/wrapper-validation-action@v1
        
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-
          
      - name: Permission to gradle File
        run: chmod +x gradlew

      - name: Build release with Gradle
        run: ./gradlew assembleRelease
        #run: ./gradlew task clean && ./gradlew task build --debug | grep .apk
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          
      - run: ls ./
      - run: ls app/build/outputs
      - run: ls -a app/build/outputs/apk/release
          

#      - uses: actions/upload-artifact@v2
#        with:
#          name: release-artifacts
#          path: app/
          
#      - uses: actions/upload-artifact@v2
#        with:
#          name: debug-apk
#          path: app/build/outputs


