name: 'CI'
on:
  push:
    branches: [ stable ]

jobs:
  make_changelog_and_ver:
    if: startsWith(github.event.head_commit.message, 'patch:') || startsWith(github.event.head_commit.message, 'minor:') || startsWith(github.event.head_commit.message, 'major:')
    runs-on: ubuntu-latest
    outputs:
      tag_version: ${{steps.tag_version.outputs.new_tag}}
      changelog: ${{steps.github_release.outputs.changelog}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Elaborate new version from tags
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""
          custom_release_rules: patch:patch,minor:minor,major:major
          release_branches: stable
          dry_run: true

      - name: "Build Changelog"
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2
        with:
          configuration: ".github/changelog-config/configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


          
  build_and_sign:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'patch:') || startsWith(github.event.head_commit.message, 'minor:') || startsWith(github.event.head_commit.message, 'major:')
    steps:  
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
    
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
            KEYSTORE_FILE_PATH="${GITHUB_WORKSPACE}"/app/keystore
            mkdir "${KEYSTORE_FILE_PATH}"
            echo $ENCODED_STRING | base64 -di > "${KEYSTORE_FILE_PATH}"/giua-app.jks
          
      - uses: gradle/wrapper-validation-action@v1
        
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-
          
      - name: Permission to gradle File
        run: chmod +x gradlew

      - name: Build release with Gradle
        run: ./gradlew assembleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      
          
      - uses: actions/upload-artifact@v2
        with:
          name: apk_signed
          path: app/build/outputs/apk/release/app-release.apk
          
          
  make_release:
    runs-on: ubuntu-latest
    needs: [ build_and_sign, make_changelog_and_ver ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: apk_signed
          path: ./giuapp-${{ needs.make_changelog_and_ver.outputs.tag_version }}.apk
          
      - name: Create Release
        uses: softprops/action-gh-release@6034af24fba4e5a8e975aaa6056554efe4c794d0
        with:
          body: ${{ needs.make_changelog_and_ver.outputs.changelog }}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          tag_name: ${{ needs.make_changelog_and_ver.outputs.tag_version }}
          files: giuapp-${{ needs.make_changelog_and_ver.outputs.tag_version }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}